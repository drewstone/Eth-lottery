// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

var contract_data = {
  abi: [{"constant":true,"inputs":[],"name":"playerCount","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"kill","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"matchCount","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"tournamentPot","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"commit","type":"bytes32"}],"name":"addPlayer","outputs":[{"name":"num","type":"uint256"}],"type":"function"},{"inputs":[],"type":"constructor"}],
  binary: "6060604052600060e08181526101008290526101208290526101408290526060526101e06040526101608181526101808290526101a08290526101c082905260805260a081905260c081905260048054600160a060020a031990811690915560058290556006805460ff19908116909155600783905560088054831690556009839055600a80549091169055600b829055600c805482169055600d829055815416331781556002819055600181905560035561051c806100bf6000396000f3606060405236156100565760e060020a6000350463302bcc57811461005857806341c0e1b51461006157806379c4264b1461008b5780638da5cb5b1461009457806394db0d1c146100a6578063e48e0b0b146100af575b005b61015860015481565b610056600054600160a060020a039081163391909116141561051a57600054600160a060020a0316ff5b61015860025481565b61016a600054600160a060020a031681565b61015860035481565b6101586004356000806103e834106104ac57506103e7193401818111156100ec57600160a060020a0333168282606082818181858883f150505050505b600d548214156104b257604080516080810182523380825260208201869052918101849052346060919091018190526004805473ffffffffffffffffffffffffffffffffffffffff191690921790915560058490556006805460ff191690556007556001600d55610497565b60408051918252519081900360200190f35b6060908152602090f35b6004600050600e600050600060026000818150548092919060010191905055815260200190815260200160002060005060008201600050816000016000506000820160009054906101000a9004600160a060020a03168160000160006101000a815481600160a060020a0302191690830217905550600182016000505481600101600050556002820160009054906101000a900460ff168160020160006101000a81548160ff0219169083021790555060038201600050548160030160005055505060048201600050816004016000506000820160009054906101000a9004600160a060020a03168160000160006101000a815481600160a060020a0302191690830217905550600182016000505481600101600050556002820160009054906101000a900460ff168160020160006101000a81548160ff021916908302179055506003820160005054816003016000505550506008820160009054906101000a9004600160a060020a03168160080160006101000a815481600160a060020a0302191690830217905550600982016000505481600901600050559050506080604051908101604052806080604051908101604052803381526020018681526020016000815260200134815260200150815260200160806040519081016040528060008152602001600060010281526020016000815260200160008152602001508152602001600081526020016001815260200150600460005060008201518160000160005060008201518160000160006101000a815481600160a060020a03021916908302179055506020820151816001016000505560408201518160020160006101000a81548160ff0219169083021790555060608201518160030160005055505060208201518160040160005060008201518160000160006101000a815481600160a060020a03021916908302179055506020820151816001016000505560408201518160020160006101000a81548160ff0219169083021790555060608201518160030160005055505060408201518160080160006101000a815481600160a060020a0302191690830217905550606082015181600901600050559050505b60018054810190819055600380543401905591505b50919050565b600d546001141561017457604080516080810182523380825260208201869052918101849052346060919091018190526008805473ffffffffffffffffffffffffffffffffffffffff19169092179091556009849055600a805460ff19169055600b55610497565b56",
  unlinked_binary: "6060604052600060e08181526101008290526101208290526101408290526060526101e06040526101608181526101808290526101a08290526101c082905260805260a081905260c081905260048054600160a060020a031990811690915560058290556006805460ff19908116909155600783905560088054831690556009839055600a80549091169055600b829055600c805482169055600d829055815416331781556002819055600181905560035561051c806100bf6000396000f3606060405236156100565760e060020a6000350463302bcc57811461005857806341c0e1b51461006157806379c4264b1461008b5780638da5cb5b1461009457806394db0d1c146100a6578063e48e0b0b146100af575b005b61015860015481565b610056600054600160a060020a039081163391909116141561051a57600054600160a060020a0316ff5b61015860025481565b61016a600054600160a060020a031681565b61015860035481565b6101586004356000806103e834106104ac57506103e7193401818111156100ec57600160a060020a0333168282606082818181858883f150505050505b600d548214156104b257604080516080810182523380825260208201869052918101849052346060919091018190526004805473ffffffffffffffffffffffffffffffffffffffff191690921790915560058490556006805460ff191690556007556001600d55610497565b60408051918252519081900360200190f35b6060908152602090f35b6004600050600e600050600060026000818150548092919060010191905055815260200190815260200160002060005060008201600050816000016000506000820160009054906101000a9004600160a060020a03168160000160006101000a815481600160a060020a0302191690830217905550600182016000505481600101600050556002820160009054906101000a900460ff168160020160006101000a81548160ff0219169083021790555060038201600050548160030160005055505060048201600050816004016000506000820160009054906101000a9004600160a060020a03168160000160006101000a815481600160a060020a0302191690830217905550600182016000505481600101600050556002820160009054906101000a900460ff168160020160006101000a81548160ff021916908302179055506003820160005054816003016000505550506008820160009054906101000a9004600160a060020a03168160080160006101000a815481600160a060020a0302191690830217905550600982016000505481600901600050559050506080604051908101604052806080604051908101604052803381526020018681526020016000815260200134815260200150815260200160806040519081016040528060008152602001600060010281526020016000815260200160008152602001508152602001600081526020016001815260200150600460005060008201518160000160005060008201518160000160006101000a815481600160a060020a03021916908302179055506020820151816001016000505560408201518160020160006101000a81548160ff0219169083021790555060608201518160030160005055505060208201518160040160005060008201518160000160006101000a815481600160a060020a03021916908302179055506020820151816001016000505560408201518160020160006101000a81548160ff0219169083021790555060608201518160030160005055505060408201518160080160006101000a815481600160a060020a0302191690830217905550606082015181600901600050559050505b60018054810190819055600380543401905591505b50919050565b600d546001141561017457604080516080810182523380825260208201869052918101849052346060919091018190526008805473ffffffffffffffffffffffffffffffffffffffff19169092179091556009849055600a805460ff19169055600b55610497565b56",
  address: "0xe1cbd2c83a7b39cf8515ce21b665c205e23ad0c5",
  generated_with: "2.0.4",
  contract_name: "Tournament"
};

function Contract() {
  if (Contract.Pudding == null) {
    throw new Error("Tournament error: Please call load() first before creating new instance of this contract.");
  }

  Contract.Pudding.apply(this, arguments);
};

Contract.load = function(Pudding) {
  Contract.Pudding = Pudding;

  Pudding.whisk(contract_data, Contract);

  // Return itself for backwards compatibility.
  return Contract;
}

Contract.new = function() {
  if (Contract.Pudding == null) {
    throw new Error("Tournament error: Please call load() first before calling new().");
  }

  return Contract.Pudding.new.apply(Contract, arguments);
};

Contract.at = function() {
  if (Contract.Pudding == null) {
    throw new Error("Tournament error: lease call load() first before calling at().");
  }

  return Contract.Pudding.at.apply(Contract, arguments);
};

Contract.deployed = function() {
  if (Contract.Pudding == null) {
    throw new Error("Tournament error: Please call load() first before calling deployed().");
  }

  return Contract.Pudding.deployed.apply(Contract, arguments);
};

if (typeof module != "undefined" && typeof module.exports != "undefined") {
  module.exports = Contract;
} else {
  // There will only be one version of Pudding in the browser,
  // and we can use that.
  window.Tournament = Contract;
}
