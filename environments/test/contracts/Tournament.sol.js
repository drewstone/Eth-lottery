// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

var contract_data = {
  abi: [{"constant":true,"inputs":[],"name":"playerCount","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"choice","type":"bytes"}],"name":"open","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"kill","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"matches","outputs":[{"name":"leftPlayer","type":"address"},{"name":"rightPlayer","type":"address"},{"name":"bit","type":"bool"}],"type":"function"},{"constant":false,"inputs":[],"name":"checkRound","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"matchCount","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"tournamentPot","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"revealCount","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"players","outputs":[{"name":"account","type":"address"},{"name":"commitment","type":"bytes32"},{"name":"choice","type":"bytes"},{"name":"hasRevealed","type":"bool"},{"name":"eliminated","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"commit","type":"bytes32"}],"name":"addPlayer","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"commit","type":"bytes32"}],"name":"resetCommitment","outputs":[],"type":"function"},{"inputs":[],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"winner","type":"address"},{"indexed":false,"name":"payout","type":"uint256"}],"name":"Won","type":"event"}],
  binary: "606060405260008054600160a060020a0319163317815560018190556002819055600381905560045561099b806100366000396000f3606060405236156100985760e060020a6000350463302bcc57811461009a578063382f431b146100a357806341c0e1b51461020b5780634768d4ef1461023557806369bbe5c71461026e57806379c4264b146103125780638da5cb5b1461031b57806394db0d1c1461032d578063aed5be3514610336578063e2eb41ff1461033f578063e48e0b0b14610380578063fb570bc814610477575b005b61053760015481565b6040805160206004803580820135601f8101849004840285018401909552848452610098949193602493909291840191908190840183828082843750949650505050505050600160a060020a03331660009081526006602052604081206003015460ff1615801561012157506040812060030154610100900460ff16155b156106705781604051808280519060200190808383829060006004602084601f0104600f02600301f15091909101829003822082525060408051918290036020908101909220600160a060020a033316600090815260069093529120600101549092508214159050610670576040600090812060038101805460ff1916600190811790915584516002928301805481865260209586902091959381161561010002600019011693909304601f908101839004840193919287019083901061067457805160ff19168380011785555b506106649291505b808211156106a457600081556001016101f7565b610098600054600160a060020a039081163391909116141561094057600054600160a060020a0316ff5b6105496004356005602052600090815260409020805460019190910154600160a060020a039182169181169060a060020a900460ff1683565b61009860015460045460009182911415610670575b6003548210156106a8576000828152600560209081526040808320600190810154600160a060020a03168452600683529281902060029081018054835195811615610100026000190116829004601f810185900485028601850190935282855290936106b2939092908301828280156107615780601f1061073657610100808354040283529160200191610761565b61053760035481565b610573600054600160a060020a031681565b61053760025481565b61053760045481565b600660205260043560009081526040902080546001820154600383015461059093600160a060020a0393909316926002019060ff8181169161010090041685565b6100986004356103e834106106615760006103e8340311156103c257604051600160a060020a033316906000906103e71934019082818181858883f150505050505b600280546103e801905533600160a060020a03811660009081526006602052604090208054600160a060020a0319168217815560018101839055600301805461ffff19169055610641905b60035460009081526005602052604090206001015460a060020a900460ff1615610949576040600081812060019081018054600160a060020a03191685179055600354825291902001805474ff000000000000000000000000000000000000000019169055610661565b610098600435600160a060020a03331660009081526006602052604090206003015460ff6101009091041615156106615760406000818120600381018054600180840187905560ff199091169091558351602081810195869052848252600160a060020a03331685526006815290516002938401805481875295839020909693861615610100026000190190951693909304601f90810191909104840193919083901061090557805160ff19168380011785555b506109359291506101f7565b60408051918252519081900360200190f35b60408051600160a060020a0394851681529290931660208301528183015290519081900360600190f35b60408051600160a060020a03929092168252519081900360200190f35b60408051600160a060020a038716815260208101869052606081018490526080810183905260a0918101828152855460026001821615610100026000190190911604928201839052909160c08301908690801561062e5780601f106106035761010080835404028352916020019161062e565b820191906000526020600020905b81548152906001019060200180831161061157829003601f168201915b5050965050505050505060405180910390f35b600180548101908190556002900660001415610661576003805460010190555b50565b50506004805460010190555b5050565b828001600101855582156101ef579182015b828111156101ef578251826000505591602001919060010190610686565b5090565b6000600355610670565b600084815260056020908152604080832054600160a060020a0316835260068252918290206002908101805484516001821615610100026000190190911692909204601f810184900484028301840190945283825261079f9391929091908301828280156107615780601f1061073657610100808354040283529160200191610761565b820191906000526020600020905b81548152906001019060200180831161074457829003601f168201915b5050505050600080805b8351811015610942578381815181101561000257016020015160f860020a908190048102046008029091019060010161076b565b08600101905080600114156107ea57600082815260056020908152604080832060010154600160a060020a0316835260069091529020600301805461ff001916610100179055610822565b600082815260056020908152604080832060010154600160a060020a0316835260069091529020600301805461ff0019166101001790555b600180546000190180825514156108f957806001141561089b57600082815260056020908152604091829020546002548351600160a060020a039290921682529181019190915281517f8b01f9dd0400d6a1e84369a5fb8f6033934856ffa8ebadd707dca302ab551695929181900390910190a16108f9565b600082815260056020908152604091829020600101546002548351600160a060020a039290921682529181019190915281517f8b01f9dd0400d6a1e84369a5fb8f6033934856ffa8ebadd707dca302ab551695929181900390910190a15b60019190910190610283565b8280016001018555821561052b579182015b8281111561052b578251826000505591602001919060010190610917565b50506106613361040d565b565b5092915050565b600380546000908152600560205260408082208054600160a060020a031916851790559154815220600101805474ff0000000000000000000000000000000000000000191660a060020a17905561066156",
  unlinked_binary: "606060405260008054600160a060020a0319163317815560018190556002819055600381905560045561099b806100366000396000f3606060405236156100985760e060020a6000350463302bcc57811461009a578063382f431b146100a357806341c0e1b51461020b5780634768d4ef1461023557806369bbe5c71461026e57806379c4264b146103125780638da5cb5b1461031b57806394db0d1c1461032d578063aed5be3514610336578063e2eb41ff1461033f578063e48e0b0b14610380578063fb570bc814610477575b005b61053760015481565b6040805160206004803580820135601f8101849004840285018401909552848452610098949193602493909291840191908190840183828082843750949650505050505050600160a060020a03331660009081526006602052604081206003015460ff1615801561012157506040812060030154610100900460ff16155b156106705781604051808280519060200190808383829060006004602084601f0104600f02600301f15091909101829003822082525060408051918290036020908101909220600160a060020a033316600090815260069093529120600101549092508214159050610670576040600090812060038101805460ff1916600190811790915584516002928301805481865260209586902091959381161561010002600019011693909304601f908101839004840193919287019083901061067457805160ff19168380011785555b506106649291505b808211156106a457600081556001016101f7565b610098600054600160a060020a039081163391909116141561094057600054600160a060020a0316ff5b6105496004356005602052600090815260409020805460019190910154600160a060020a039182169181169060a060020a900460ff1683565b61009860015460045460009182911415610670575b6003548210156106a8576000828152600560209081526040808320600190810154600160a060020a03168452600683529281902060029081018054835195811615610100026000190116829004601f810185900485028601850190935282855290936106b2939092908301828280156107615780601f1061073657610100808354040283529160200191610761565b61053760035481565b610573600054600160a060020a031681565b61053760025481565b61053760045481565b600660205260043560009081526040902080546001820154600383015461059093600160a060020a0393909316926002019060ff8181169161010090041685565b6100986004356103e834106106615760006103e8340311156103c257604051600160a060020a033316906000906103e71934019082818181858883f150505050505b600280546103e801905533600160a060020a03811660009081526006602052604090208054600160a060020a0319168217815560018101839055600301805461ffff19169055610641905b60035460009081526005602052604090206001015460a060020a900460ff1615610949576040600081812060019081018054600160a060020a03191685179055600354825291902001805474ff000000000000000000000000000000000000000019169055610661565b610098600435600160a060020a03331660009081526006602052604090206003015460ff6101009091041615156106615760406000818120600381018054600180840187905560ff199091169091558351602081810195869052848252600160a060020a03331685526006815290516002938401805481875295839020909693861615610100026000190190951693909304601f90810191909104840193919083901061090557805160ff19168380011785555b506109359291506101f7565b60408051918252519081900360200190f35b60408051600160a060020a0394851681529290931660208301528183015290519081900360600190f35b60408051600160a060020a03929092168252519081900360200190f35b60408051600160a060020a038716815260208101869052606081018490526080810183905260a0918101828152855460026001821615610100026000190190911604928201839052909160c08301908690801561062e5780601f106106035761010080835404028352916020019161062e565b820191906000526020600020905b81548152906001019060200180831161061157829003601f168201915b5050965050505050505060405180910390f35b600180548101908190556002900660001415610661576003805460010190555b50565b50506004805460010190555b5050565b828001600101855582156101ef579182015b828111156101ef578251826000505591602001919060010190610686565b5090565b6000600355610670565b600084815260056020908152604080832054600160a060020a0316835260068252918290206002908101805484516001821615610100026000190190911692909204601f810184900484028301840190945283825261079f9391929091908301828280156107615780601f1061073657610100808354040283529160200191610761565b820191906000526020600020905b81548152906001019060200180831161074457829003601f168201915b5050505050600080805b8351811015610942578381815181101561000257016020015160f860020a908190048102046008029091019060010161076b565b08600101905080600114156107ea57600082815260056020908152604080832060010154600160a060020a0316835260069091529020600301805461ff001916610100179055610822565b600082815260056020908152604080832060010154600160a060020a0316835260069091529020600301805461ff0019166101001790555b600180546000190180825514156108f957806001141561089b57600082815260056020908152604091829020546002548351600160a060020a039290921682529181019190915281517f8b01f9dd0400d6a1e84369a5fb8f6033934856ffa8ebadd707dca302ab551695929181900390910190a16108f9565b600082815260056020908152604091829020600101546002548351600160a060020a039290921682529181019190915281517f8b01f9dd0400d6a1e84369a5fb8f6033934856ffa8ebadd707dca302ab551695929181900390910190a15b60019190910190610283565b8280016001018555821561052b579182015b8281111561052b578251826000505591602001919060010190610917565b50506106613361040d565b565b5092915050565b600380546000908152600560205260408082208054600160a060020a031916851790559154815220600101805474ff0000000000000000000000000000000000000000191660a060020a17905561066156",
  address: "0x33d2235b232e4ee32bad3d9751659fc625173500",
  generated_with: "2.0.4",
  contract_name: "Tournament"
};

function Contract() {
  if (Contract.Pudding == null) {
    throw new Error("Tournament error: Please call load() first before creating new instance of this contract.");
  }

  Contract.Pudding.apply(this, arguments);
};

Contract.load = function(Pudding) {
  Contract.Pudding = Pudding;

  Pudding.whisk(contract_data, Contract);

  // Return itself for backwards compatibility.
  return Contract;
}

Contract.new = function() {
  if (Contract.Pudding == null) {
    throw new Error("Tournament error: Please call load() first before calling new().");
  }

  return Contract.Pudding.new.apply(Contract, arguments);
};

Contract.at = function() {
  if (Contract.Pudding == null) {
    throw new Error("Tournament error: lease call load() first before calling at().");
  }

  return Contract.Pudding.at.apply(Contract, arguments);
};

Contract.deployed = function() {
  if (Contract.Pudding == null) {
    throw new Error("Tournament error: Please call load() first before calling deployed().");
  }

  return Contract.Pudding.deployed.apply(Contract, arguments);
};

if (typeof module != "undefined" && typeof module.exports != "undefined") {
  module.exports = Contract;
} else {
  // There will only be one version of Pudding in the browser,
  // and we can use that.
  window.Tournament = Contract;
}
