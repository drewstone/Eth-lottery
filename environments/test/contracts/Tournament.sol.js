// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

var contract_data = {
  abi: [{"constant":true,"inputs":[],"name":"playerCount","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"kill","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"choice","type":"bytes32"},{"name":"nonce","type":"uint256"}],"name":"open","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"checkRound","outputs":[{"name":"remaining","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"numRevealed","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"v","type":"bytes32"}],"name":"bytesToUInt","outputs":[{"name":"ret","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"getMatchCount","outputs":[{"name":"matchcount","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"input","type":"bytes32"}],"name":"doubleSha","outputs":[{"name":"result","type":"bytes32"}],"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"tournamentPot","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"winners","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"players","outputs":[{"name":"account","type":"address"},{"name":"commitment","type":"bytes32"},{"name":"hasRevealed","type":"bool"},{"name":"choice","type":"bytes32"},{"name":"eliminated","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"commit","type":"bytes32"}],"name":"addPlayer","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"resetMatch","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"sender","type":"address"}],"name":"populateMatch","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"commit","type":"bytes32"}],"name":"resetCommitment","outputs":[],"type":"function"},{"inputs":[],"type":"constructor"}],
  binary: "600060c081815260e08290526101008290526101208290526101408290526060526102006040526101608181526101808290526101a08290526101c08290526101e082905260805260a081905260058054600160a060020a031990811690915560068290556007805460ff1990811690915560088390556009805482169055600a8054909216909155600b829055600c805482169055600d829055600e80549091169055600f5560008054600160a060020a0319163317815560018190556002819055600455610b44806100d36000396000f3606060405236156100c45760e060020a6000350463302bcc5781146100c657806341c0e1b5146100cf57806357d1f3b8146100f957806369bbe5c71461012b57806376d4192c1461018257806381a33a6f1461018b5780638c4f7dae146101a35780638d6bf407146101b95780638da5cb5b146101e157806394db0d1c146101f3578063a2fb1175146101fc578063e2eb41ff14610242578063e48e0b0b14610285578063ecd5289b14610336578063f63d06331461041e578063fb570bc8146104a6575b005b6101a760015481565b6100c4600054600160a060020a039081163391909116141561041c57600054600160a060020a0316ff5b6100c4600435602435600160a060020a03331660009081526011602052604090206004015460ff161561077a575b5050565b6101a7600080805b6010548210156106bc576002610813601060005084815481101561000257600091909152600b027f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6780154610192565b6101a760045481565b6101a76004355b6000808083811415610ae657610002565b6010545b60408051918252519081900360200190f35b60408051600435815281519081900360209081018220825291519081900390910190206101a7565b6104d5600054600160a060020a031681565b6101a760025481565b6104d560043560038054829081101561000257506000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0154600160a060020a031681565b601160205260048035600090815260409020600281015460018201548254600384015493909401546104f294600160a060020a031693919260ff90811692911685565b6100c460043560006103e834106101275760006103e8340311156102c857604051600160a060020a0333169082906103e71934019082818181858883f150505050505b50600280546103e801815533600160a060020a03811660009081526011602052604081208054600160a060020a031916831781556001808201869055938101805460ff1990811690915560038201929092556004810180549092169091558254830190925561012790610425565b604080516101008101825260006060828101828152608084810184905260a085810185905260c0860185905260e08601859052918552855191820186528382526020828101858152838801868152848601878152858501888152898501879052898b01899052600580549a518051600160a060020a03199c8d161790915594850151600655600780549b86015160ff199c8d1617905596840151600855600980549490950151938a169093179093559251600a8054909716179095559051600b5551600c8054861690911790559151600d559051600e805490931617909155600f556100c45b565b6100c46004355b600f546000141561052857600160a060020a038181166000908152601160205260409020805460058054600160a060020a031916919093161790915560018181015460065560028201546007805460ff1990811660ff9384161790915560038401546008556004939093015460098054909416911617909155600f556106b9565b6100c4600435600160a060020a03331660009081526011602052604090206004015460ff1615610a59576106b9565b60408051600160a060020a03929092168252519081900360200190f35b60408051600160a060020a0396909616865260208601949094528484019290925260608401526080830152519081900360a00190f35b600160a060020a0381811660009081526011602052604081208054600a8054600160a060020a0319169190941617909255600182810154600b556002830154600c805460ff1990811660ff938416179091556003850154600d5560049490940154600e8054909516911617909255600f556010805491820180825590919082818380158290116105ed5760008390526105ed90600b9081027f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672908101918402016106f6565b505050600092835250600580546020909320600b928302018054600160a060020a0319908116600160a060020a039586161782556006805460018401556007805460028501805460ff1990811660ff93841617909155600880546003880155600980546004890180548516918616919091179055600a8054998901805490981699909b1698909817909555965492850192909255600c5490840180548716918316919091179055600d5491830191909155600e549282018054909416921691909117909155600f549101555b50565b60108054600080835591909152610a3890600b027f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672908101905b80821115610776578054600160a060020a0319908116825560006001830181815560028401805460ff199081169091556003850183905560048501805482169055600585018054909416909355600684018290556007840180548416905560088401829055600984018054909316909255600a92909201919091556106f6565b5090565b600160a060020a03331660009081526011602052604090206002015460ff161580156107d35750604060008190206001015481518481526020818101859052835191829003840182208252925190819003909201909120145b15610127575060048054600190810190915533600160a060020a0316600090815260116020526040902060028101805460ff191690921790915560030155565b61085560106000508581548110156100025750600052600b85027f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6730154610192565b08600101905080600114156108a457600380546001810180835582818380158290116108d4578183600052602060002091820191016108d491905b808211156107765760008155600101610890565b60038054600181018083558281838015829011610982578183600052602060002091820191016109829190610890565b5050509190906000526020600020900160006010805486908110156100025750908190528154600b86027f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6720154600160a060020a0316600160a060020a031991909116179091558054600192508490811015610002575050600b83027f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67b01805460ff19169091179055610a2c565b505050919090600052602060002090016000601080548690811015610002575090819052600b85027f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67701548254600160a060020a031916600160a060020a0391909116179091558054600192508490811015610002575050600b83027f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67601805460ff191690911790555b60019190910190610133565b5060035460011415610a4e576003549250610a54565b60035492505b505090565b6040805160a08101825233808252602082810185815260008486018181526060860182815260808701838152600160a060020a038716845260119095529690912094518554600160a060020a031916178555905160018501555160028401805460ff199081169092179055935160038401555160049290920180549093169091179091556106b990610425565b5060005b6020811015610b0f57601f81900360080260020a840460ff1691506000821415610b16575b5050919050565b6030821080610b255750603982115b15610b2f57610002565b600a929092028101602f190191600101610aea56",
  unlinked_binary: "600060c081815260e08290526101008290526101208290526101408290526060526102006040526101608181526101808290526101a08290526101c08290526101e082905260805260a081905260058054600160a060020a031990811690915560068290556007805460ff1990811690915560088390556009805482169055600a8054909216909155600b829055600c805482169055600d829055600e80549091169055600f5560008054600160a060020a0319163317815560018190556002819055600455610b44806100d36000396000f3606060405236156100c45760e060020a6000350463302bcc5781146100c657806341c0e1b5146100cf57806357d1f3b8146100f957806369bbe5c71461012b57806376d4192c1461018257806381a33a6f1461018b5780638c4f7dae146101a35780638d6bf407146101b95780638da5cb5b146101e157806394db0d1c146101f3578063a2fb1175146101fc578063e2eb41ff14610242578063e48e0b0b14610285578063ecd5289b14610336578063f63d06331461041e578063fb570bc8146104a6575b005b6101a760015481565b6100c4600054600160a060020a039081163391909116141561041c57600054600160a060020a0316ff5b6100c4600435602435600160a060020a03331660009081526011602052604090206004015460ff161561077a575b5050565b6101a7600080805b6010548210156106bc576002610813601060005084815481101561000257600091909152600b027f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6780154610192565b6101a760045481565b6101a76004355b6000808083811415610ae657610002565b6010545b60408051918252519081900360200190f35b60408051600435815281519081900360209081018220825291519081900390910190206101a7565b6104d5600054600160a060020a031681565b6101a760025481565b6104d560043560038054829081101561000257506000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0154600160a060020a031681565b601160205260048035600090815260409020600281015460018201548254600384015493909401546104f294600160a060020a031693919260ff90811692911685565b6100c460043560006103e834106101275760006103e8340311156102c857604051600160a060020a0333169082906103e71934019082818181858883f150505050505b50600280546103e801815533600160a060020a03811660009081526011602052604081208054600160a060020a031916831781556001808201869055938101805460ff1990811690915560038201929092556004810180549092169091558254830190925561012790610425565b604080516101008101825260006060828101828152608084810184905260a085810185905260c0860185905260e08601859052918552855191820186528382526020828101858152838801868152848601878152858501888152898501879052898b01899052600580549a518051600160a060020a03199c8d161790915594850151600655600780549b86015160ff199c8d1617905596840151600855600980549490950151938a169093179093559251600a8054909716179095559051600b5551600c8054861690911790559151600d559051600e805490931617909155600f556100c45b565b6100c46004355b600f546000141561052857600160a060020a038181166000908152601160205260409020805460058054600160a060020a031916919093161790915560018181015460065560028201546007805460ff1990811660ff9384161790915560038401546008556004939093015460098054909416911617909155600f556106b9565b6100c4600435600160a060020a03331660009081526011602052604090206004015460ff1615610a59576106b9565b60408051600160a060020a03929092168252519081900360200190f35b60408051600160a060020a0396909616865260208601949094528484019290925260608401526080830152519081900360a00190f35b600160a060020a0381811660009081526011602052604081208054600a8054600160a060020a0319169190941617909255600182810154600b556002830154600c805460ff1990811660ff938416179091556003850154600d5560049490940154600e8054909516911617909255600f556010805491820180825590919082818380158290116105ed5760008390526105ed90600b9081027f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672908101918402016106f6565b505050600092835250600580546020909320600b928302018054600160a060020a0319908116600160a060020a039586161782556006805460018401556007805460028501805460ff1990811660ff93841617909155600880546003880155600980546004890180548516918616919091179055600a8054998901805490981699909b1698909817909555965492850192909255600c5490840180548716918316919091179055600d5491830191909155600e549282018054909416921691909117909155600f549101555b50565b60108054600080835591909152610a3890600b027f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672908101905b80821115610776578054600160a060020a0319908116825560006001830181815560028401805460ff199081169091556003850183905560048501805482169055600585018054909416909355600684018290556007840180548416905560088401829055600984018054909316909255600a92909201919091556106f6565b5090565b600160a060020a03331660009081526011602052604090206002015460ff161580156107d35750604060008190206001015481518481526020818101859052835191829003840182208252925190819003909201909120145b15610127575060048054600190810190915533600160a060020a0316600090815260116020526040902060028101805460ff191690921790915560030155565b61085560106000508581548110156100025750600052600b85027f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6730154610192565b08600101905080600114156108a457600380546001810180835582818380158290116108d4578183600052602060002091820191016108d491905b808211156107765760008155600101610890565b60038054600181018083558281838015829011610982578183600052602060002091820191016109829190610890565b5050509190906000526020600020900160006010805486908110156100025750908190528154600b86027f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6720154600160a060020a0316600160a060020a031991909116179091558054600192508490811015610002575050600b83027f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67b01805460ff19169091179055610a2c565b505050919090600052602060002090016000601080548690811015610002575090819052600b85027f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67701548254600160a060020a031916600160a060020a0391909116179091558054600192508490811015610002575050600b83027f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67601805460ff191690911790555b60019190910190610133565b5060035460011415610a4e576003549250610a54565b60035492505b505090565b6040805160a08101825233808252602082810185815260008486018181526060860182815260808701838152600160a060020a038716845260119095529690912094518554600160a060020a031916178555905160018501555160028401805460ff199081169092179055935160038401555160049290920180549093169091179091556106b990610425565b5060005b6020811015610b0f57601f81900360080260020a840460ff1691506000821415610b16575b5050919050565b6030821080610b255750603982115b15610b2f57610002565b600a929092028101602f190191600101610aea56",
  address: "0x479b05c8bd4df4dd559b2b8ce93db2fae2bb1156",
  generated_with: "2.0.4",
  contract_name: "Tournament"
};

function Contract() {
  if (Contract.Pudding == null) {
    throw new Error("Tournament error: Please call load() first before creating new instance of this contract.");
  }

  Contract.Pudding.apply(this, arguments);
};

Contract.load = function(Pudding) {
  Contract.Pudding = Pudding;

  Pudding.whisk(contract_data, Contract);

  // Return itself for backwards compatibility.
  return Contract;
}

Contract.new = function() {
  if (Contract.Pudding == null) {
    throw new Error("Tournament error: Please call load() first before calling new().");
  }

  return Contract.Pudding.new.apply(Contract, arguments);
};

Contract.at = function() {
  if (Contract.Pudding == null) {
    throw new Error("Tournament error: lease call load() first before calling at().");
  }

  return Contract.Pudding.at.apply(Contract, arguments);
};

Contract.deployed = function() {
  if (Contract.Pudding == null) {
    throw new Error("Tournament error: Please call load() first before calling deployed().");
  }

  return Contract.Pudding.deployed.apply(Contract, arguments);
};

if (typeof module != "undefined" && typeof module.exports != "undefined") {
  module.exports = Contract;
} else {
  // There will only be one version of Pudding in the browser,
  // and we can use that.
  window.Tournament = Contract;
}
